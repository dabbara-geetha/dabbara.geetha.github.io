{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/functions/functions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","default_dxmap","default_hccmap","default_hcccoefn","fetch","then","response","json","data","err","interactions","v22_interactions","v23_interactions","v24_interactions","dx2hcc","dx_list","age","ver","sex","disabl","never_trump","verbose","length","j","temp_dx_list","toString","dx_dct","dx_hccs","split","unique_hccs","dxdct_hccs","collator","Intl","Collator","undefined","numeric","sensitivity","sort","compare","unique_hccs_codes","dxmap","hccmap","unique_dx","clean_dxlist","dx","JSON","parse","stringify","agesex_edits","Set","hcc","add","got_trumped","child","temp_a","temp_b","push","map","e","temp_c","trumped_hcc","hcc_list","entries","Array","from","list_dx","String","replace","toUpperCase","dx_set","temp_dx_set","trump_hccs","temp_hcc_list","hcc_list_temp","clean_hcclist","hcc_set","trumped_set","filter","x","has","list_hcc","hcc_map","isNaN","trim","hcc1","hcc2","temp_hcc_set","ed_leukemia","ed_bronchitis","ed_vasc_insf","ed_emphysema","ed_breastca","ed_low_bw","ed_conjoined","ed_newbn_substance","ed_chron_resp","ed_disruptive_mood","ed_hemophilia","includes","female_sex","edit_dct","get_raf","demo_lst","hcc_lst","model","baserate","toLowerCase","hcccoefn","demo_detail","hcc_detail","demo_raf","hcc_raf","demo","label","score","toFixed","raf_dct","ccs","cc_set","int_hccs","diag_cats","my_dcs","key_set","new_values","int_hccs_new","size","concat","cnt","index","hccs","raf","temp_hccs","mydx","temp","temp_mydx","conditionlist","allhcc","temp_conditionlist","item","Number","isInteger","startsWith","list_dx_clean","dct","combined_hccs","orec","demo_str","age_maps","Math","trunc","medicaid","origds","age_labels","endsWith","age_lower_bounds","age_upper_bounds","lower_bound","mcaid_flag","origds_flag","ds_str"],"mappings":"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","file":"functions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 121);\n","var default_dxmap, default_hccmap, default_hcccoefn;\r\nfetch('/dist/load_dxmap.json')\r\n  .then(response => {\r\n    return response.json();\r\n  })\r\n  .then(data => {\r\n    // Work with JSON data here\r\n    default_dxmap = data;\r\n  })\r\n  .catch(err => {\r\n    // Do something for an error here\r\n  });\r\nfetch('/dist/load_hccmap.json')\r\n  .then(response => {\r\n    return response.json();\r\n  })\r\n  .then(data => {\r\n    // Work with JSON data here\r\n    default_hccmap = data;\r\n  })\r\n  .catch(err => {\r\n    // Do something for an error here\r\n  });\r\nfetch('/dist/load_hcccoefn.json')\r\n  .then(response => {\r\n    return response.json();\r\n  })\r\n  .then(data => {\r\n    // Work with JSON data here\r\n    default_hcccoefn = data;\r\n  })\r\n  .catch(err => {\r\n    // Do something for an error here\r\n  });\r\nvar default_ver = 'v23';\r\nvar default_model = 'CNA'; \r\nvar default_baserate = 868.0;\r\nvar default_verbose = true;\r\nvar default_never_trump = 0;\r\nvar interactions = {'v22': v22_interactions, 'v23': v23_interactions, 'v24': v24_interactions};\r\n\r\n\r\n/**\r\n * Utility to calculate a list of unique, trumped, HCCs from dx codes, includes interactions and age/sex edits.\r\n * @customfunction\r\n * @param {string[][]} dx_list accepts multiple list of dx codes\r\n */\r\nfunction dx2hcc(dx_list, age = 0, ver = '', sex = '', disabl = false, never_trump = 0, verbose = false) {\r\n  /*\r\n  Utility to calculate a list of unique, trumped, HCCs from dx codes, includes interactions and age/sex edits.\r\n\r\n  :param dx_list: list of str\r\n                  List of DX Codes (case and decimal insensitive)\r\n  :param ver: str\r\n              HCC Model version\r\n  :param age: float\r\n              Beneficiary age\r\n  :param verbose:\r\n  :param disabl: bool\r\n                  Disability flag\r\n  :param sex: Gender {\"M\" or \"F\"}\r\n  :return: list of str\r\n          List of HCC codes\r\n  */\r\n  for (i = 0; i < dx_list.length; i++) {\r\n      for (j = 0; j < dx_list[i].length; j++) {\r\n          dx_list = dx_list;\r\n      }\r\n  }\r\n  var temp_dx_list = dx_list.toString();\r\n  temp_dx_list = temp_dx_list.split(\",\");\r\n\r\n  ver = ver || default_ver;\r\n  never_trump = never_trump || default_never_trump;\r\n  var dx_dct = dx_hccs(temp_dx_list, ver = ver, age = age, sex = sex, verbose = verbose);\r\n  var unique_hccs = dxdct_hccs(dx_dct, never_trump = never_trump);\r\n  var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\r\n  unique_hccs.sort(collator.compare);\r\n  unique_hccs = interactions[ver](unique_hccs, disabl, age);\r\n  var unique_hccs_codes = unique_hccs.toString();\r\n  return unique_hccs_codes;\r\n\r\n}\r\n\r\n/**\r\n * Look up the HCC code for each unique DX code in a list of DX. Includes trumping and agesex edits\r\n * @customfunction\r\n */\r\nfunction dx_hccs(dx_list, ver = '', age = 0, sex = '', verbose = true) {\r\n  /*\r\n  Look up the HCC code for each unique DX code in a list of DX. Includes trumping and agesex edits\r\n  :param dx_list: list of str\r\n                  List of dx codes; case and decimal insensitive\r\n  :param ver: str\r\n              Optional HCC version. Otherwise uses default version of ccalc object\r\n  :param age: float\r\n              Member age\r\n  :param sex: str\r\n              Member gender {\"M\"/\"F\"}\r\n  :param verbose: bool\r\n                  Include Non HCC DX in outputs\r\n  :return: dict\r\n          Dict of unique DX codes and their corresponding hcc codes\r\n  */\r\n for (i = 0; i < dx_list.length; i++) {\r\n    for (j = 0; j < dx_list[i].length; j++) {\r\n        dx_list = dx_list;\r\n    }\r\n}\r\nvar temp_dx_list = dx_list.toString();\r\ntemp_dx_list = temp_dx_list.split(\",\");\r\n  \r\n  ver = ver || default_ver;\r\n  verbose = verbose || default_verbose;\r\n\r\n  var dxmap = default_dxmap[ver];\r\n  var hccmap = default_hccmap[ver];\r\n\r\n  var dx_dct = {};\r\n\r\n  var unique_dx = clean_dxlist(temp_dx_list, ver);\r\n  // Validate DX against model and pull in DX info\r\n  /*for dx in unique_dx:\r\n      if dx in dxmap:\r\n          dx_dct[dx] = deepcopy(dxmap[dx])  # Get details for this DX Code\r\n      elif verbose:\r\n          dx_dct[dx] = {\"desc\": \"\", \"hccs\": {}}*/\r\n  for (var dx of unique_dx) {\r\n      if (dx in dxmap) {\r\n          dx_dct[dx] = JSON.parse(JSON.stringify(dxmap[dx]));\r\n      } else if (verbose) {\r\n          dx_dct[dx] = { \"desc\": \"\", \"hccs\": {} }\r\n      }\r\n  }\r\n\r\n  if (age && sex) {  // age and sex are optional. w/o them this function can still generically do dx->hcc calcs\r\n      agesex_edits(dx_dct, age, sex);\r\n  }\r\n\r\n  // Find all unique HCCs that are valid in the hcc ver\r\n  var unique_hccs = new Set();\r\n\r\n  for (var key in dx_dct) {\r\n      if (dx_dct.hasOwnProperty(key)) {\r\n          for (var hcc in dx_dct[key]['hccs']) {\r\n              if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\r\n                  if (dx_dct[key]['hccs'][hcc] in hccmap) {\r\n                      unique_hccs.add(dx_dct[key]['hccs'][hcc]);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  };\r\n\r\n  var got_trumped = {};\r\n  for (var hcc of unique_hccs) {\r\n      for (var child of hccmap[hcc]['children']) {\r\n          got_trumped[child] = hcc;\r\n      }\r\n  }\r\n\r\n\r\n  // Apply trumping and convert to HCC sets to lists (better for json serialization)\r\n\r\n  for (var dx in dx_dct) {\r\n      if (dx_dct.hasOwnProperty(dx)) {\r\n          var temp_a = dx_dct[dx]['hccs'];\r\n          var temp_b = [];\r\n          for (var i in dx_dct[dx]['hccs']) {\r\n              temp_b.push({ 'desc': hccmap[dx_dct[dx]['hccs'][i]]['desc'] })\r\n          }\r\n          var c = temp_a.map(function (e, i) {\r\n              return [e, temp_b[i]];\r\n          });\r\n          var temp_c = {};\r\n          for (var key in c) {\r\n              if (c.hasOwnProperty(key)) {\r\n                  temp_c[c[key][0]] = c[key][1]\r\n              }\r\n          }\r\n          dx_dct[dx]['hccs'] = temp_c;\r\n          for (var trumped_hcc in got_trumped) {\r\n              if (got_trumped.hasOwnProperty(trumped_hcc)) {\r\n                  if (got_trumped[trumped_hcc] in dx_dct[dx]['hccs']) { // If we find trumped HCC, replace with note of its demise\r\n                      dx_dct[dx]['hccs'][got_trumped[trumped_hcc]]['trumped by'] = got_trumped[got_trumped[trumped_hcc]]\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  }\r\n  return dx_dct;\r\n}\r\n\r\n/**\r\n * dxdct_hccs\r\n * @customfunction\r\n */\r\nfunction dxdct_hccs(dx_dct, never_trump = 0) {\r\n  never_trump = never_trump || default_never_trump;\r\n  var hcc_list = new Set();\r\n\r\n  if (never_trump == 0) {\r\n      for (const [key, value] of Object.entries(dx_dct)) {\r\n          if (dx_dct.hasOwnProperty(key)) {\r\n              for (const [hcc, trump] of Object.entries(dx_dct[key]['hccs'])) {\r\n                  if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\r\n                      if ((dx_dct[key]['hccs'][hcc]['trumped by'] == undefined)) {\r\n                          hcc_list.add(hcc);\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      hcc_list = Array.from(hcc_list);\r\n      var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\r\n      hcc_list.sort(collator.compare);\r\n  } else {\r\n    var hcc_list = new Set();\r\n    for (var key in dx_dct) {\r\n        if (dx_dct.hasOwnProperty(key)) { \r\n            for (var hcc in dx_dct[key]['hccs']){\r\n                hcc_list.add(dx_dct[key]['hccs'][hcc]);\r\n            }\r\n        }\r\n    }\r\n    hcc_list = Array.from(hcc_list);\r\n    var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\r\n    hcc_list.sort(collator.compare);\r\n  }\r\n  return hcc_list;\r\n}\r\n\r\n/**\r\n * Convert string to list, dedupe, and ensure DX are formatted correctly.\r\n * @customfunction\r\n * @param {string[][]} dx_list accepts multiple list of dx codes\r\n */\r\nfunction clean_dxlist(dx_list, ver = '') {\r\n  // Convert string to list, dedupe, and ensure DX are formatted correctly.\r\n  for (i = 0; i < dx_list.length; i++) {\r\n    for (j = 0; j < dx_list[i].length; j++) {\r\n        dx_list = dx_list;\r\n    }\r\n  }\r\n  var temp_dx_list = dx_list.toString();\r\n  temp_dx_list = temp_dx_list.split(\",\");\r\n\r\n  ver = ver || default_ver;\r\n  var dxmap = default_dxmap[ver];\r\n  var list_dx = [];\r\n  for (var i in temp_dx_list) {\r\n      if (temp_dx_list[i] != '') {\r\n          list_dx[i] = (String(temp_dx_list[i]).replace('.', '')).toUpperCase();\r\n      }\r\n  }\r\n  if (typeof (list_dx) == 'string') {\r\n      list_dx = list_dx.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\r\n  }\r\n  var dx_set = new Set();\r\n  for (var dx of list_dx) {\r\n      if (dxmap.hasOwnProperty(dx)) {\r\n          dx_set.add(dx);\r\n      }\r\n  }\r\n  //return Array.from(dx_set);\r\n\r\n  var temp_dx_set = Array.from(dx_set);\r\n  temp_dx_set = temp_dx_set.toString();\r\n  return temp_dx_set;\r\n}\r\n\r\n/**\r\n * Utility to calculate raf from list of DX codes\r\n * @customfunction\r\n */\r\nfunction dx2raf(dx_list, age = 0, ver = '', model = '', sex = '', disabl = false, verbose = false, never_trump = 0, baserate = 0.0) {\r\n    /*\r\n    Utility to calculate raf from list of DX codes\r\n    */\r\n\r\n    ver = ver.toLowerCase() || default_ver;\r\n    model = (String(model)).toUpperCase() || default_model;\r\n    baserate = baserate || default_baserate;\r\n    never_trump = never_trump || default_never_trump;\r\n\r\n    var hccs = dx2hcc(dx_list = dx_list, age = age, ver = ver, sex = sex, disabl = disabl, verbose = verbose, never_trump = never_trump);\r\n    var raf = get_raf([], hccs, ver = ver, model = model, baserate = baserate);\r\n    return raf[\"hcc_score\"];\r\n}\r\n\r\n/**\r\n * Utility for prepping an HCC list, applying Trumping and Interactions; does not include age/sex interactions\r\n * @customfunction\r\n * @param {string[][]} hcc_list accepts multiple list of dx codes\r\n */\r\nfunction prep_hccs(hcc_list, ver = '', age = 0, disabl = false, never_trump = 0) {\r\n    /*\r\n    Utility for prepping an HCC list, applying Trumping and Interactions; does not include age/sex interactions\r\n    as they at the DX level\r\n    */\r\n    ver = ver || default_ver;\r\n    never_trump = never_trump || default_never_trump;\r\n    disabl = false;\r\n \r\n    var hccs = trump_hccs(hcc_list, ver = ver, never_trump = never_trump);\r\n    hccs = hccs.split(',');\r\n    temp_hccs = interactions[ver](hccs, disabl, age);\r\n    return temp_hccs.toString();\r\n}\r\n\r\n/**\r\n * Given a list of HCCs and an HCC version, returns a list of HCCs after trumping\r\n * @customfunction\r\n * @param {string[][]} hcc_list accepts multiple list of dx codes\r\n */\r\nfunction trump_hccs(hcc_list, ver = '', never_trump = 0) {\r\n    // Given a list of HCCs and an HCC version, returns a list of HCCs after trumping\r\n    for (i = 0; i < hcc_list.length; i++) {\r\n        for (j = 0; j < hcc_list[i].length; j++) {\r\n            hcc_list = hcc_list;\r\n        }\r\n    }\r\n    var temp_hcc_list = hcc_list.toString();\r\n    temp_hcc_list = temp_hcc_list.split(\",\");\r\n\r\n    ver = ver || default_ver;\r\n    never_trump = never_trump || default_never_trump;\r\n    var hccmap = default_hccmap[ver];\r\n\r\n    // Make sure we're getting the right format\r\n    hcc_list_temp = clean_hcclist(temp_hcc_list, ver = ver);\r\n    hcc_list_temp = hcc_list_temp.split(',');\r\n    if (never_trump == 0) {\r\n        var hcc_set = new Set(hcc_list_temp);\r\n        var trumped_set = new Set();\r\n        for (var hcc of hcc_set) {\r\n            if (hcc in hccmap) {\r\n                for (var child of hccmap[hcc]['children']) {\r\n                    trumped_set.add(child);\r\n                }\r\n            }\r\n        }\r\n        hcc_set = new Set([...hcc_set].filter(x => !trumped_set.has(x)))\r\n        hcc_list = Array.from(hcc_set);\r\n    }\r\n\r\n    var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\r\n    hcc_list_temp.sort(collator.compare);\r\n    //return hcc_list_temp;\r\n    var list_hcc = hcc_list_temp.toString();\r\n    return list_hcc;\r\n}\r\n\r\n/**\r\n * clean hcclist\r\n * @customfunction\r\n * @param {string[][]} hcc_list accepts multiple list of dx codes\r\n */\r\nfunction clean_hcclist(hcc_list, ver = '') {\r\n    for (i = 0; i < hcc_list.length; i++) {\r\n        for (j = 0; j < hcc_list[i].length; j++) {\r\n            hcc_list = hcc_list;\r\n        }\r\n    }\r\n    var temp_hcc_list = hcc_list.toString();\r\n    temp_hcc_list = temp_hcc_list.split(\",\");\r\n\r\n    ver = ver || default_ver;\r\n    var hcc_map = default_hccmap[ver];\r\n\r\n    if (typeof temp_hcc_list == 'string') {\r\n        temp_hcc_list = temp_hcc_list.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\r\n    }\r\n    else if (typeof temp_hcc_list == 'number') {\r\n        temp_hcc_list = [temp_hcc_list];\r\n    }\r\n\r\n    // If you got integers, add the HCC prefix. If strings, make sure they're stripped and uppercase\r\n    var hcc_list_temp = [];\r\n    for (var hcc of temp_hcc_list) {\r\n        if (!isNaN(hcc.toString().trim())) {\r\n            hcc_list_temp.push(\"HCC\" + hcc.toString().trim());\r\n        } else {\r\n            hcc_list_temp.push(hcc.trim().toUpperCase());\r\n        }\r\n    }\r\n    temp_hcc_list = hcc_list_temp;\r\n    //Replacing HCC019 to HCC19\r\n    var hcc_list_temp = [];\r\n    for (var hcc1 of temp_hcc_list) {\r\n        hcc_list_temp.push(hcc1.replace(/HCC0+/, 'HCC'));\r\n    }\r\n    temp_hcc_list = hcc_list_temp;\r\n\r\n    // We want HCC1 rather than HCC001, etc.\r\n    var hcc_set = new Set();\r\n    for (var hcc2 of temp_hcc_list) {\r\n        if (hcc_map.hasOwnProperty(hcc2)) {\r\n            hcc_set.add(hcc2);\r\n        }\r\n    }\r\n    //return Array.from(hcc_set);\r\n    var temp_hcc_set = Array.from(hcc_set);\r\n    temp_hcc_set = temp_hcc_set.toString();\r\n    return temp_hcc_set;\r\n}\r\n\r\n/**\r\n * get_hcc_dx\r\n * @customfunction\r\n * @param {string[][]} hcc_list accepts multiple list of dx codes\r\n * @param {string[][]} dx_list accepts multiple list of dx codes\r\n */\r\nfunction get_hcc_dx(hcc_list, dx_list, ver) {\r\n    for (i = 0; i < hcc_list.length; i++) {\r\n        for (j = 0; j < hcc_list[i].length; j++) {\r\n            hcc_list = hcc_list;\r\n        }\r\n    }\r\n    var temp_hcc_list = hcc_list.toString();\r\n    temp_hcc_list = temp_hcc_list.split(\",\");\r\n\r\n    for (i = 0; i < dx_list.length; i++) {\r\n        for (j = 0; j < dx_list[i].length; j++) {\r\n            dx_list = dx_list;\r\n        }\r\n    }\r\n    var temp_dx_list = dx_list.toString();\r\n    temp_dx_list = temp_dx_list.split(\",\");\r\n\r\n    var dxmap = default_dxmap[ver];\r\n    var hcc_set = new Set(temp_hcc_list);\r\n    var mydx = new Set();\r\n    for (var dx of temp_dx_list) {\r\n        var temp_set = new Set(dxmap[dx]['hccs']);\r\n        var temp = ([...temp_set].filter(x => hcc_set.has(x)));\r\n        if (dxmap.hasOwnProperty(dx) && temp) {\r\n            mydx.add(dx);\r\n        }\r\n    }\r\n    temp_mydx = Array.from(mydx);\r\n    temp_mydx = temp_mydx.toString();\r\n    return temp_mydx;\r\n}\r\n\r\n/**\r\n * condition_resolver\r\n * @customfunction\r\n * @param {string[][]} conditionlist accepts multiple list\r\n */\r\nfunction condition_resolver(conditionlist, ver = '', never_trump = 0, allhcc = 0) {\r\n    for (i = 0; i < conditionlist.length; i++) {\r\n        for (j = 0; j < conditionlist[i].length; j++) {\r\n            conditionlist = conditionlist;\r\n        }\r\n    }\r\n    var temp_conditionlist = conditionlist.toString();\r\n    temp_conditionlist = temp_conditionlist.split(\",\");\r\n\r\n    ver = ver || default_ver;\r\n    never_trump = never_trump || default_never_trump;\r\n    var list_hcc = [];\r\n    list_hcc = temp_conditionlist.filter(item => Number.isInteger(item) || item.startsWith('HCC'));\r\n    var list_dx = [];\r\n    var list_dx_clean = [];\r\n    var dct = new Set();\r\n    if ((list_hcc.length > 0) || allhcc) {\r\n        allhcc = 1;\r\n        list_dx = temp_conditionlist.filter(item => list_hcc.includes(item));\r\n        list_dx_clean = clean_dxlist(list_dx, ver);\r\n        list_dx_clean.split();\r\n        var hccs = dx2hcc(list_dx_clean, ver = ver, never_trump = never_trump);\r\n        hccs.split();\r\n        var combined_hccs = list_hcc.concat(hccs);\r\n        dct = { 'allhcc': allhcc, 'condition': combined_hccs };\r\n\r\n    } else {\r\n        list_dx = conditionlist;\r\n        dct = { 'allhcc': allhcc, 'condition': list_dx };\r\n    }\r\n    return dct;\r\n}\r\n\r\n/**\r\n * Edits DX List for a beneficiary based on AGE/SEX (From CMS I0V05ED2.TXT)\r\n * @customfunction\r\n */\r\nfunction agesex_edits(dx_dct, age, sex) {\r\n  /*\r\n  Edits DX List for a beneficiary based on AGE/SEX (From CMS I0V05ED2.TXT)\r\n  Valid for V22, V23, V24\r\n  :param dx_dct: dict\r\n                 Dict of {DX:HCC}\r\n  :param age: float\r\n              Age of member\r\n  :param sex: str\r\n              Member's gender\r\n  :return: dx_dct: dict\r\n              Dictionary of {DX:HCC} edited per member age/sex rules\r\n  */\r\n\r\n  var ed_leukemia = [\"C9100\", \"C9101\", \"C9102\", \"C9500\", \"C9501\", \"C9502\",\r\n      \"C7400\", \"C7401\", \"C7402\", \"C7410\", \"C7411\", \"C7412\",\r\n      \"C7490\", \"C7491\", \"C7492\"];\r\n\r\n  var ed_bronchitis = [\"J410\", \"J411\", \"J418\", \"J42\", \"J440\", \"J441\"];\r\n\r\n  var ed_vasc_insf = [\"K55011\", \"K55012\", \"K55019\", \"K55021\", \"K55022\",\r\n      \"K55029\", \"K55031\", \"K55032\", \"K55039\", \"K55041\", \"K55042\",\r\n      \"K55049\", \"K55051\", \"K55052\", \"K55059\", \"K55061\", \"K55062\",\r\n      \"K55069\", \"K5530\", \"K5531\", \"K5532\", \"K5533\"];\r\n\r\n  var ed_emphysema = [\"J430\", \"J431\", \"J432\", \"J438\", \"J439\", \"J449\", \"J982\", \"J983\"];\r\n\r\n  var ed_breastca = [\"C50011\", \"C50012\", \"C50019\", \"C50021\", \"C50022\", \"C50029\",\r\n      \"C50111\", \"C50112\", \"C50119\", \"C50121\", \"C50122\", \"C50129\",\r\n      \"C50211\", \"C50212\", \"C50219\", \"C50221\", \"C50222\", \"C50229\",\r\n      \"C50311\", \"C50312\", \"C50319\", \"C50321\", \"C50322\", \"C50329\",\r\n      \"C50411\", \"C50412\", \"C50419\", \"C50421\", \"C50422\", \"C50429\",\r\n      \"C50511\", \"C50512\", \"C50519\", \"C50521\", \"C50522\", \"C50529\",\r\n      \"C50611\", \"C50612\", \"C50619\", \"C50621\", \"C50622\", \"C50629\",\r\n      \"C50811\", \"C50812\", \"C50819\", \"C50821\", \"C50822\", \"C50829\",\r\n      \"C50911\", \"C50912\", \"C50919\", \"C50921\", \"C50922\", \"C50929\"];\r\n\r\n  var ed_low_bw = [\"P0500\", \"P0501\", \"P0502\", \"P0503\", \"P0504\", \"P0505\",\r\n      \"P0506\", \"P0507\", \"P0508\", \"P0509\", \"P0510\", \"P0511\",\r\n      \"P0512\", \"P0513\", \"P0514\", \"P0515\", \"P0516\", \"P0517\",\r\n      \"P0518\", \"P0519\", \"P052\", \"P059\", \"P0700\", \"P0701\",\r\n      \"P0702\", \"P0703\", \"P0710\", \"P0714\", \"P0715\", \"P0716\",\r\n      \"P0717\", \"P0718\", \"P0720\", \"P0721\", \"P0722\", \"P0723\",\r\n      \"P0724\", \"P0725\", \"P0726\", \"P0730\", \"P0731\", \"P0732\",\r\n      \"P0733\", \"P0734\", \"P0735\", \"P0736\", \"P0737\", \"P0738\",\r\n      \"P0739\", \"P080\", \"P081\", \"P0821\", \"P0822\"];\r\n\r\n  var ed_conjoined = [\"Q894\"];\r\n\r\n  var ed_newbn_substance = [\"K551\", \"K558\", \"K559\",\r\n      \"P041\", \"P0411\", \"P0412\", \"P0413\", \"P0414\", \"P0415\",\r\n      \"P0416\", \"P0417\", \"P0418\", \"P0419\", \"P041A\",\r\n      \"P042\", \"P043\", \"P0440\", \"P0441\", \"P0442\", \"P0449\",\r\n      \"P045\", \"P046\", \"P048\", \"P0481\", \"P0489\",\r\n      \"P049\", \"P930\", \"P938\", \"P961\", \"P962\",\r\n      \"Q390\", \"Q391\", \"Q392\", \"Q393\", \"Q394\", \"Q6410\",\r\n      \"Q6411\", \"Q6412\", \"Q6419\", \"Q790\", \"Q791\", \"Q792\",\r\n      \"Q793\", \"Q794\", \"Q7951\"];\r\n\r\n  var ed_chron_resp = [\"P270\", \"P271\", \"P278\", \"P279\"];\r\n\r\n  var ed_disruptive_mood = [\"F3481\"];\r\n\r\n  var ed_hemophilia = [\"D66\", \"D67\"];\r\n\r\n  // Optimal to have the loop outside of the age checks, but this is easier to read\r\n  for (var dx in dx_dct) {\r\n\r\n      // Split acute lymphoid and other acute leukemias, except  myeloid diagnoses to age 18+ (HCC 8)\r\n      // and age <18 (HCC 9). Split adrenal gland cancer diagnoses to age 18+ (HCC 10) and age <18 (HCC 9).\r\n      if (age < 18 && ed_leukemia.includes(dx)) {\r\n          dx_dct[dx]['hccs'] = ([\"HCC9\"]);\r\n      }\r\n\r\n      // Split chronic bronchitis diagnoses to age 18+ (HCC 160) and age <18 (HCC 161)\r\n      if (age < 18 && ed_bronchitis.includes(dx)) {\r\n          dx_dct[dx]['hccs'] = ([\"HCC161\"]);\r\n      }\r\n\r\n      // Split acute vascular insufficiency of intestine diagnosis to age 2+ (HCC 154) and age <2 (HCC 42)\r\n      if (age < 2 && ed_vasc_insf.includes(dx)) {\r\n          dx_dct[dx]['hccs'] = [(\"HCC42\")];\r\n      }\r\n\r\n      // Split breast cancer diagnoses to age 50+ (HCC 12) and age <50 (HCC 11)\r\n      if (age < 50 && ed_breastca.includes(dx)) {\r\n          dx_dct[dx]['hccs'] = ([\"HCC11\"]);\r\n      }\r\n\r\n      // Split emphysema diagnoses to age 18+ (HCC 160) and age 2-17 (HCC160; split not needed in HHS model).\r\n      // If age <2 out of payment model\r\n      if (age < 2 && ed_emphysema.includes(dx)) {\r\n          dx_dct[dx]['hccs'] = ([\"HCC-1\"]);\r\n      }\r\n\r\n      // Edit for newborn low birthweight. If age 1+ out of payment model\r\n      if (age != 0 && ed_low_bw.includes(dx)) {\r\n          dx_dct[dx]['hccs'] = ([\"HCC-1\"]);\r\n      }\r\n\r\n      // Split conjoined twins diagnoses to age 1+ (HCC 97) and age <1 (HCC 247)\r\n      if (age >= 1 && ed_conjoined.includes(dx)) {\r\n          dx_dct[dx]['hccs'] = ([\"HCC97\"]);\r\n      }\r\n\r\n      // Neonatal effects of maternal drug abuse: If age 2+ out of payment model\r\n      if (age >= 2 && ed_newbn_substance.includes(dx)) {\r\n          dx_dct[dx]['hccs'] = ([\"HCC-1\"]);\r\n      }\r\n\r\n      // Split chronic respiratory disease arising in the perinatal period diagnoses to age 2+\r\n      // (HCC 162) and age <2 (HCC 127).\r\n      if (age >= 2 && ed_chron_resp.includes(dx)) {\r\n          dx_dct[dx]['hccs'] = ([\"HCC162\"]);\r\n      }\r\n\r\n      // Mood disorder: Edit for targeted age of diagnosis. If age <6 or age >18 out of payment model.\r\n      if (age < 6 || age > 18 && ed_disruptive_mood.includes(dx)) {\r\n          dx_dct[dx]['hccs'] = ([\"HCC-1\"]);\r\n      }\r\n\r\n      // Split hemophilia diagnoses to male (HCC 66 if age <65 or HCC 66 if age 65+; age split not needed in HHS model)\r\n      //  and female (HCC 75)\r\n      female_sex = [\"2\", \"F\", \"Female\"];\r\n      if (female_sex.includes(sex) && ed_hemophilia.includes(dx)) {\r\n          dx_dct[dx]['hccs'] = ([\"HCC75\"]);\r\n      }\r\n  }\r\n\r\n  edit_dct = {};  // Build new dict after filtering out all HCCs edited out\r\n  for (dx in dx_dct) {\r\n      if (dx_dct[dx]['hccs'] != ([\"HCC-1\"])) {\r\n          edit_dct[dx] = dx_dct[dx];\r\n      }\r\n  }\r\n\r\n  return edit_dct;\r\n}\r\n\r\n/**\r\n * Look up demographic and hcc RAF for a member given codes. IMPORTANT: ASSUMES HCCs are already clean and deduped and hierarchy\r\n * @customfunction\r\n */\r\nfunction get_raf(demo_lst, hcc_lst, ver = '', model = '', verbose = true, baserate = 0.0) {\r\n    /*\r\n    Look up demographic and hcc RAF for a member given codes. IMPORTANT: ASSUMES HCCs are already clean and deduped\r\n    and hierarchy. Based on CMS V2218O1P.TXT.  Returns a dict of risk scores in the format:\r\n    {\r\n        raf: float of total risk factor,\r\n        premium: PM PM payment for members of this raf and base rate($)\r\n        demo_raf: float of demographic risk factor\r\n        hcc_raf: float of hcc risk factor\r\n        demo_detail: dict of {demographic_code: demo_raf} for each demographic code in list\r\n        hcc_defail: dict of {hcc_code: hcc:raf} for each hcc code in list\r\n\r\n    :param model: str\r\n                    Hcc model for use\r\n    :param demo_lst: list of str\r\n                    List of applicable demographic codes for a member (eg CNA_F65_70)\r\n    :param hcc_lst: list of str\r\n                    List of hccs (assumes hccs have already been trumped)\r\n    :param ver: str\r\n                    Optional HCC version to be used in calculation\r\n    :param model: str\r\n            Optional HCC model to be used in calculation\r\n    :param verbose: bool\r\n    :param baserate: float\r\n                    pmpm premium base rate\r\n\r\n    :return: dict\r\n            raf_dct\r\n    */\r\n\r\n    ver = ver.toLowerCase() || default_ver;\r\n    model = (String(model)).toUpperCase() || default_model;\r\n    baserate = baserate || default_baserate;\r\n    verbose = verbose || default_verbose;\r\n\r\n    var hcccoefn = default_hcccoefn[ver];\r\n    var demo_detail = {};\r\n    var hcc_detail = {};\r\n    var demo_raf = 0.0;\r\n    var hcc_raf = 0.0;\r\n\r\n    for (var demo of demo_lst) {\r\n        if (hcccoefn.hasOwnProperty(demo)) {\r\n            demo_detail[demo] = hcccoefn[demo];\r\n            demo_raf += hcccoefn[demo];\r\n        }\r\n    }\r\n\r\n    for (var hcc in hcc_lst) {\r\n        var label = model + \"_\" + hcc_lst[hcc];\r\n        if (label in hcccoefn) {\r\n            hcc_detail[label] = hcccoefn[label];\r\n            hcc_raf += hcccoefn[label];\r\n        } else if (verbose) {\r\n            hcc_detail[label] = 0.0;\r\n        }\r\n    }\r\n\r\n    var score = (demo_raf + hcc_raf).toFixed(4);\r\n    var raf_dct = {\r\n        \"score\": score,\r\n        \"premium\": (score * baserate).toFixed(2),\r\n        \"demo_score\": (demo_raf).toFixed(4),\r\n        \"hcc_score\": (hcc_raf).toFixed(4),\r\n        \"demo_detail\": demo_detail,\r\n        \"hcc_detail\": hcc_detail\r\n    };\r\n    return raf_dct;\r\n}\r\n\r\n/**\r\n * Create demographic variables used in regressions, from CMS SAS macro AGESEXV2\r\n * @customfunction\r\n */\r\nfunction agesex(age, sex, orec, model) {\r\n    /*\r\n        Create demographic variables used in regressions, from CMS SAS macro AGESEXV2\r\n        Valid for V22, V23, V24\r\n        :param age: float\r\n                    Age of beneficiary\r\n        :param sex: str\r\n                    Gender of beneficiary\r\n        :param orec: str\r\n                    Original reason for enrollment\r\n        :param model: str\r\n                    Code for CMS model (str)\r\n        :return: list of str\r\n                list of demographic str for looking up demo coefficients\r\n    */\r\n    var age_maps = {\r\n        \"STD\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65_69\", \"70_74\", \"75_79\",\r\n            \"80_84\", \"85_89\", \"90_94\", \"95_GT\"],\r\n        \"NE\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"70_74\", \"75_79\",\r\n            \"80_84\", \"85_89\", \"90_94\", \"95_GT\"]\r\n    };\r\n\r\n    age = Math.trunc(age);  // In case float is passed and someone at upper age bound\r\n\r\n    var demo_str;\r\n    var male_sex = [\"M\", \"MALE\", \"1\"];\r\n    if (male_sex.includes(sex.toUpperCase())) {\r\n        demo_str = 'M';\r\n    } else {\r\n        demo_str = \"F\";\r\n    }\r\n\r\n    // Directly from CMS AGESEXV2\r\n    var disabl = (age < 65) && (orec != \"0\");\r\n    var origds = (orec == \"1\") && !(disabl);\r\n    var medicaid;\r\n    var medicaid_condition = [\"CP\", \"CF\"];\r\n    if (medicaid_condition.includes(model)) {\r\n        medicaid = true;\r\n    } else {\r\n        medicaid = false;\r\n    }\r\n    var new_enrolee = model.endsWith(\"NE\");\r\n    var age_labels = [];\r\n    if (new_enrolee) {\r\n        age_labels = age_maps[\"NE\"];\r\n    } else {\r\n        age_labels = age_maps[\"STD\"];\r\n    }\r\n\r\n    // Derive the lower bound & upper bound of each age band from ordered list of age labels\r\n    var age_lower_bounds = [];\r\n    var age_upper_bounds = [];\r\n    for (var i in age_labels) {\r\n        var split = age_labels[i].split(\"_\");\r\n        age_lower_bounds.push(split[0]);\r\n        age_upper_bounds.push(split[1]);\r\n    }\r\n\r\n    for (const [i, lower_bound] of age_lower_bounds.entries()) {\r\n        if (i == age_lower_bounds[age_lower_bounds.length] - 1) {\r\n            demo_str += age_labels[i];\r\n            break;\r\n        }\r\n        if ((lower_bound >= age) && (lower_bound < age_lower_bounds[i + 1])) {\r\n            demo_str += age_labels[i];\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (model.endsWith(\"NE\")) {\r\n        if (medicaid) {\r\n            var mcaid_flag = \"\";\r\n        } else {\r\n            mcaid_flag = \"N\";\r\n        }\r\n        if (origds) {\r\n            var origds_flag = \"\";\r\n        } else {\r\n            origds_flag = \"N\";\r\n        }\r\n        demo_str = mcaid_flag + \"MCAID_\" + origds_flag + \"ORIGDIS_NE\" + demo_str;\r\n    }\r\n\r\n    var demo_lst = [model + \"_\" + demo_str];\r\n    var model_type = [\"CNA\", \"CFA\", \"CPA\"];\r\n    var ds_str;\r\n    var sex_type;\r\n\r\n    if ((model_type.includes(model)) && origds) {\r\n        if (sex === \"M\") {\r\n            sex_type = \"Male\";\r\n        } else {\r\n            sex_type = \"Female\";\r\n        }\r\n        ds_str = model + \"_OriginallyDisabled_\" + sex_type;\r\n        demo_lst.push(ds_str);\r\n    }\r\n    var temp_demo_lst = demo_lst.toString();\r\n    return temp_demo_lst;\r\n}\r\n\r\n/**\r\n * Calculated interaction HCCs given a dict of hccs, age, and disability flag\r\n * @customfunction\r\n */\r\nfunction v22_interactions(ccs, disabl, age = '') {\r\n    /*\r\n    Calculated interaction HCCs given a list of hccs, age, and disability flag\r\n    :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\r\n    :param disabl: CMS disabled flag\r\n    :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\r\n    :return: List of HCC codes, including interaction codes\r\n    */\r\n    var cc_set = new Set(ccs);\r\n    var int_hccs = {};\r\n\r\n    // diagnostic categories\r\n\r\n    var diag_cats = {\r\n        \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\r\n        \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\r\n        \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\r\n        \"CHF\": new Set([\"HCC85\"]),\r\n        \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\r\n        \"RENAL\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\"]),\r\n        \"SEPSIS\": new Set([\"HCC2\"]),\r\n        \"gSubstanceAbuse\": new Set([\"HCC54\", \"HCC55\"]),\r\n        \"gPsychiatric\": new Set([\"HCC57\", \"HCC58\"])\r\n    };\r\n\r\n    var my_dcs = {};\r\n\r\n    for (var key in diag_cats) {\r\n        if (diag_cats.hasOwnProperty(key)) {\r\n            var key_set = new Set(diag_cats[key])\r\n            var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\r\n            my_dcs[key] = new_values;\r\n        }\r\n    \r\n    }\r\n    // Community Interactions\r\n    int_hccs[\"HCC47_gCancer\"] = my_dcs[\"CANCER\"] && new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"HCC85_gDiabetesMellit\"] = my_dcs[\"DIABETES\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"HCC85_gCopdCF\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"HCC85_gRenal_V23\"] = my_dcs[\"RENAL\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\r\n    int_hccs[\"HCC85_HCC96\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"gSubstanceAbuse_gPsychiatric\"] = my_dcs[\"gPsychiatric\"] && my_dcs[\"gSubstanceAbuse\"];\r\n\r\n    // institutional model interactions\r\n    int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"CHF_gCopdCF\"] = my_dcs[\"CHF\"] && my_dcs[\"gCopdCF\"];\r\n    int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\r\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = my_dcs[\"SEPSIS\"] && int_hccs[\"PRESSURE_ULCER\"];\r\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\r\n    int_hccs[\"DIABETES_CHF\"] = my_dcs[\"DIABETES\"] && my_dcs[\"CHF\"];\r\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\r\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"gCopdCF\"];\r\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"CHF\"];\r\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\r\n\r\n    if (typeof disabl !== 'undefined') {\r\n        int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n        int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n        int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\r\n        int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\r\n        int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\r\n        int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\r\n\r\n        if (typeof age !== 'undefined' && age < 65) {\r\n            int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"]\r\n        }\r\n    }\r\n\r\n    var int_hccs_new = [];\r\n    for (var key in int_hccs) {\r\n       if (int_hccs.hasOwnProperty(key)) {\r\n            if (int_hccs[key].size !== 0) {\r\n                int_hccs_new.push(key);\r\n            }\r\n        }\r\n    }\r\n    return ccs.concat(int_hccs_new)\r\n}\r\n\r\n/**\r\n * Calculated interaction HCCs given a dict of hccs, age, and disability flag\r\n * @customfunction\r\n */\r\nfunction v23_interactions(ccs, disabl, age = '') {\r\n    /*\r\n    Calculated interaction HCCs given a dict of hccs, age, and disability flag\r\n    :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\r\n    :param disabl: CMS disabled flag\r\n    :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\r\n    :return: List of HCC codes, including interaction codes\r\n    */\r\n    var cc_set = new Set(ccs);\r\n    var int_hccs = {};\r\n\r\n    // diagnostic categories\r\n\r\n    var diag_cats = {\r\n        \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\r\n        \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\r\n        \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\r\n        \"CHF\": new Set([\"HCC85\"]),\r\n        \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\r\n        \"RENAL_V23\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\",\"HCC138\"]),\r\n        \"SEPSIS\": new Set([\"HCC2\"]),\r\n        \"gSubstanceAbuse_V23\": new Set([\"HCC54\", \"HCC55\",\"HCC56\"]),\r\n        \"gPsychiatric_V23\": new Set([\"HCC57\", \"HCC58\",\"HCC59\", \"HCC60\"])\r\n    };\r\n\r\n    var my_dcs = {};\r\n\r\n    for (var key in diag_cats) {\r\n        if (diag_cats.hasOwnProperty(key)) {\r\n            var key_set = new Set(diag_cats[key])\r\n            var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\r\n            my_dcs[key] = new_values;\r\n        }\r\n    \r\n    }\r\n    // Community Interactions\r\n    int_hccs[\"HCC47_gCancer\"] = my_dcs[\"CANCER\"] && new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"HCC85_gDiabetesMellit\"] = my_dcs[\"DIABETES\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"HCC85_gCopdCF\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"HCC85_gRenal_V23\"] = my_dcs[\"RENAL_V23\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\r\n    int_hccs[\"HCC85_HCC96\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] = my_dcs[\"gPsychiatric_V23\"] && my_dcs[\"gSubstanceAbuse_V23\"];\r\n\r\n    // institutional model interactions\r\n    int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"CHF_gCopdCF\"] = my_dcs[\"CHF\"] && my_dcs[\"gCopdCF\"];\r\n    int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\r\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = my_dcs[\"SEPSIS\"] && int_hccs[\"PRESSURE_ULCER\"];\r\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\r\n    int_hccs[\"DIABETES_CHF\"] = my_dcs[\"DIABETES\"] && my_dcs[\"CHF\"];\r\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\r\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"gCopdCF\"];\r\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"CHF\"];\r\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\r\n\r\n    if (typeof disabl !== 'undefined') {\r\n        int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n        int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n        int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\r\n        int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\r\n        int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\r\n        int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\r\n\r\n        if (typeof age !== 'undefined' && age < 65) {\r\n            int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"]\r\n        }\r\n    }\r\n\r\n    var int_hccs_new = [];\r\n    for (var key in int_hccs) {\r\n       if (int_hccs.hasOwnProperty(key)) {\r\n            if (int_hccs[key].size !== 0) {\r\n                int_hccs_new.push(key);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return ccs.concat(int_hccs_new)\r\n}\r\n\r\n/**\r\n * Calculated interaction HCCs given a dict of hccs, age, and disability flag\r\n * @customfunction\r\n */\r\nfunction v24_interactions(ccs, disabl, age = '') {\r\n    /*\r\n    Calculated interaction HCCs given a list of hccs, age, and disability flag\r\n    :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\r\n    :param disabl: CMS disabled flag\r\n    :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\r\n    :return: List of HCC codes, including interaction codes\r\n    */\r\n    var cc_set = new Set(ccs);\r\n    var int_hccs = {};\r\n     var cnt= cc_set.length;\r\n     int_hccs[\"D10P\"]=cnt>9\r\n     var index = \"D\".concat(cnt)\r\n     int_hccs[index] = (cnt > 3 && cnt <10)\r\n    // diagnostic categories\r\n\r\n    var diag_cats = {\r\n        \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\r\n        \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\r\n        \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\r\n        \"CHF\": new Set([\"HCC85\"]),\r\n        \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\r\n        \"RENAL_V24\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\", \"HCC138\"]),\r\n        \"SEPSIS\": new Set([\"HCC2\"]),\r\n        \"gSubstanceAbuse_V24\": new Set([\"HCC54\", \"HCC55\", \"HCC56\"]),\r\n        \"gPsychiatric_V24\": new Set([\"HCC57\", \"HCC58\", \"HCC59\", \"HCC60\"])\r\n    };\r\n\r\n    var my_dcs = {};\r\n\r\n    for (var key in diag_cats) {\r\n        if (diag_cats.hasOwnProperty(key)) {\r\n            var key_set = new Set(diag_cats[key])\r\n            var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\r\n            my_dcs[key] = new_values;\r\n        }\r\n    \r\n    }\r\n    // Community Interactions\r\n    int_hccs[\"HCC47_gCancer\"] = my_dcs[\"CANCER\"] && new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"HCC85_gDiabetesMellit\"] = my_dcs[\"DIABETES\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"HCC85_gCopdCF\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"HCC85_gRenal_V24\"] = my_dcs[\"RENAL_V24\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\r\n    int_hccs[\"HCC85_HCC96\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] = my_dcs[\"gPsychiatric_V24\"] && my_dcs[\"gSubstanceAbuse_V24\"];\r\n\r\n    // institutional model interactions\r\n    int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));   \r\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = my_dcs[\"SEPSIS\"] && int_hccs[\"PRESSURE_ULCER\"];\r\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];       \r\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\r\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"gCopdCF\"];\r\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"CHF\"];\r\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\r\n\r\n    if (typeof disabl !== 'undefined') {\r\n        int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n        int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n        int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\r\n        int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\r\n        int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\r\n        int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\r\n\r\n        if (typeof age !== 'undefined' && age < 65) {\r\n            int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"]\r\n        }\r\n    }\r\n\r\n    var int_hccs_new = [];\r\n    for (var key in int_hccs) {\r\n       if (int_hccs.hasOwnProperty(key)) {\r\n            if (int_hccs[key].size !== 0) {\r\n                int_hccs_new.push(key);\r\n            }\r\n        }\r\n    }\r\n    return ccs.concat(int_hccs_new)\r\n}\r\n"],"sourceRoot":""}